name: Release Go Binaries  
  
on:  
  push:  
    tags:  
      - 'v*'  # 匹配所有以 v 开头的 tag  
  
jobs:  
  build-and-release:  
    runs-on: ubuntu-latest  
    strategy:  
      matrix:  
        goos: [linux, windows, darwin]  # 编译目标操作系统  
        goarch: [amd64, arm64]  # 编译目标架构，根据需要选择  
  
    steps:  
      - name: Checkout code  
        uses: actions/checkout@v3  
  
      - name: Set up Go  
        uses: actions/setup-go@v5  
        with:  
          go-version: 1.22
  
      - name: Build binaries  
        env:  
          CGO_ENABLED: 0  # 禁用 CGO 以创建静态链接的二进制文件  
        run: |  
          for GOOS in ${{ matrix.goos }}; do  
            for GOARCH in ${{ matrix.goarch }}; do  
              echo "Building $GOOS-$GOARCH"  
              GOOS=$GOOS GOARCH=$GOARCH go build -o kubetea-$GOOS-$GOARCH ./
            done  
          done  
   
      - name: Create Release  
        id: create_release  
        uses: softprops/action-gh-release@v1  
        if: startsWith(github.ref, 'refs/tags/')  
        with:  
          tag_name: ${{ github.ref_name }}  
          name: Release ${{ github.ref_name }}  
          body: |  
            Release notes for ${{ github.ref_name }}  
            - Some changes  
            - More changes  
          draft: false  
          prerelease: false  
          files: |  
            kubetea-linux-amd64
            kubetea-linux-arm64
            kubetea-windows-amd64
            kubetea-windows-arm64
            kubetea-darwin-amd64
            kubetea-darwin-arm64
   
      - name: Upload Release Assets  
        uses: actions/upload-release-asset@v1  
        if: startsWith(github.ref, 'refs/tags/')  
        env:  
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        with:  
          upload_url: ${{ steps.create_release.outputs.upload_url }}  
          asset_path: ./myapp-${{ matrix.goos }}-${{ matrix.goarch }}  
          asset_name: myapp-${{ matrix.goos }}-${{ matrix.goarch }}  
          asset_content_type: application/octet-stream
